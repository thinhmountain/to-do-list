{"ast":null,"code":"var _jsxFileName = \"/Users/thinhmountain/Desktop/to-do-list-api/to-do-list-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskList from './TaskList';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // ƒê·ªïi port n·∫øu backend ch·∫°y ·ªü port kh√°c\n  const API_URL = 'http://localhost:5500/api/tasks'; // ƒê·∫£m b·∫£o ƒë√∫ng port backend Flask\n\n  useEffect(() => {\n    fetch(API_URL).then(res => res.json()).then(data => {\n      setTasks(data);\n      setLoading(false);\n    }).catch(err => {\n      setLoading(false);\n      setTasks([]);\n    });\n  }, []);\n  const addTask = task => {\n    setTasks([...tasks, task]);\n  };\n  const deleteTask = id => {\n    fetch(`${API_URL}/${id}`, {\n      method: 'DELETE'\n    }).then(res => {\n      if (res.ok) setTasks(tasks.filter(task => task.id !== id));\n    });\n  };\n  const toggleComplete = (id, completed) => {\n    fetch(`${API_URL}/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        completed: !completed\n      })\n    }).then(res => {\n      if (res.ok) {\n        setTasks(tasks.map(task => task.id === id ? {\n          ...task,\n          completed: !completed\n        } : task));\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 500,\n      margin: '40px auto',\n      padding: 24,\n      background: '#fff',\n      borderRadius: 10,\n      boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: '#1976d2'\n      },\n      children: \"\\uD83D\\uDCDD To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAdd: addTask,\n      apiUrl: API_URL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"suOgpW3t2nMZzUgwyaGqSRlDRtE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskList","TaskForm","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","loading","setLoading","API_URL","fetch","then","res","json","data","catch","err","addTask","task","deleteTask","id","method","ok","filter","toggleComplete","completed","headers","body","JSON","stringify","map","style","maxWidth","margin","padding","background","borderRadius","boxShadow","children","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","apiUrl","onDelete","onToggle","_c","$RefreshReg$"],"sources":["/Users/thinhmountain/Desktop/to-do-list-api/to-do-list-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TaskList from './TaskList';\nimport TaskForm from './TaskForm';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // ƒê·ªïi port n·∫øu backend ch·∫°y ·ªü port kh√°c\n  const API_URL = 'http://localhost:5500/api/tasks'; // ƒê·∫£m b·∫£o ƒë√∫ng port backend Flask\n\n  useEffect(() => {\n    fetch(API_URL)\n      .then(res => res.json())\n      .then(data => {\n        setTasks(data);\n        setLoading(false);\n      })\n      .catch(err => {\n        setLoading(false);\n        setTasks([]);\n      });\n  }, []);\n\n  const addTask = (task) => {\n    setTasks([...tasks, task]);\n  };\n\n  const deleteTask = (id) => {\n    fetch(`${API_URL}/${id}`, { method: 'DELETE' })\n      .then(res => {\n        if (res.ok) setTasks(tasks.filter(task => task.id !== id));\n      });\n  };\n\n  const toggleComplete = (id, completed) => {\n    fetch(`${API_URL}/${id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ completed: !completed })\n    })\n      .then(res => {\n        if (res.ok) {\n          setTasks(tasks.map(task =>\n            task.id === id ? { ...task, completed: !completed } : task\n          ));\n        }\n      });\n  };\n\n  return (\n    <div style={{\n      maxWidth: 500,\n      margin: '40px auto',\n      padding: 24,\n      background: '#fff',\n      borderRadius: 10,\n      boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n    }}>\n      <h1 style={{ textAlign: 'center', color: '#1976d2' }}>üìù To-Do List</h1>\n      <TaskForm onAdd={addTask} apiUrl={API_URL} />\n      {loading ? (\n        <p style={{ textAlign: 'center' }}>Loading...</p>\n      ) : (\n        <TaskList\n          tasks={tasks}\n          onDelete={deleteTask}\n          onToggle={toggleComplete}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}